
"
"   the same commands as the original .vimrc configuration.
" You can find a list of commands here: https://jb.gg/h38q75
" Find more examples here: https://jb.gg/share-ideavimrc
""" Plugins  --------------------------------
set clipboard+=unnamed
set ideajoin
set idearefactormode=keep

set surround
set textobj-entire
set highlightedyank
set NERDTree
set quickscope
set argtextobj
set which-key

set notimeout
set timeoutlen=5000

let g:WhichKeyDesc_lsp = "<leader>l -> LSP"

" Plug 'bkad/CamelCaseMotion'
" Plug 'rhysd/vim-operator-surround'

" --- Plugin Settings -----------------------------

let mapleader=" "


" nnoremap <Space> <Nop>
" let g:camelcasemotion_key = '<leader>'

nnoremap <Leader>e :NERDTree<CR>
nnoremap <Leader>E :NERDTreeToggle<CR>

let g:NERDTreeMapActivateNode='l'
let g:NERDTreeMapJumpParent='h'

" nnoremap s :action AceAction<CR>
nnoremap s ys

nnoremap gcc <C-/>
vnoremap gc  <C-/>

nnoremap <leader>z :action ToggleDistractionFreeMode<CR>
nnoremap <c-z> :action UnsplitAll<CR>
nnoremap <leader>t :action Terminal.OpenInTerminal<CR>

nnoremap [[ :action MethodUp<CR>
nnoremap ]] :action MethodDown<CR>
nnoremap gsk :action MethodUp<CR>
nnoremap gsj :action MethodDown<CR>
nnoremap zc :action CollapseRegion<CR>
nnoremap zo :action ExpandRegion<CR>
nnoremap <leader>zc :action CollapseAllRegions<CR>
nnoremap <leader>zo :action ExpandAllRegions<CR>
nnoremap <leader>c :action CommentByLineComment<CR>
nnoremap gcc :action CommentByLineComment<CR>
vnoremap gc :action CommentByLineComment<CR>
nnoremap <leader>r :action Refactorings.QuickListPopupAction<CR>
nnoremap <Leader>=  :action ReformatCode<CR>
nnoremap <leader>o :action OptimizeImports<CR>
nnoremap <c-r> :action RecentFiles<CR>
nnoremap <leader>l :action RecentLocations<CR>
nnoremap <leader>h  :action LocalHistory.ShowHistory<CR>
nnoremap <leader>n :action GotoNextError<CR>
nnoremap <leader>N :action GotoPreviousError<CR>

nmap <Leader>fr :action RecentFiles<CR>
nmap <Leader>ff :action GotoFile<CR>
nmap <Leader>fs :action FindInPath<CR>
nmap <Leader>fg :action Git.menu<CR>
" nmap <Leader>m :action CodeGlance.toggle<CR>

nnoremap gR :action IdeaVim.ReloadVimRc.reload<CR>

" nnoremap <leader>ff :action FindInPath<CR>
" TODO: find codeactions
" nnoremap <leader>la :action GotoAction<CR>
" nmap <Leader>lA :action Refactorings.QuickListPopupAction<CR>
nnoremap <leader>li :action Generate<CR>
nnoremap <leader>la :action Console.Jpa.Execute<CR>
nnoremap <leader>lf
nnoremap <leader>lA :action ShowErrorDescription<CR>
" CodeInsightEditorActions

nnoremap <leader>lr :action RenameElement<CR>
" nnoremap gf :action GotoFile<CR>
nnoremap gr :action FindUsages<CR>
" nnoremap <leader>s :action GotoRelated<CR>
nnoremap <leader>lh :action CallHierarchy<CR>
nnoremap <leader>le :action ShowNavBar<CR>
" nnoremap <c-s> :action FileStructurePopup<CR>
" nnoremap <c-o> :action GotoSymbol<CR>
" nnoremap gc :action GotoClass<CR>
" nnoremap gi :action GotoImplementation<CR>
" nnoremap gd :action GotToDeclaration<CR>
" nnoremap gp :action GotToSuperMethod<CR>
nnoremap gt :action GotoTest<CR>
nnoremap gb :action Back<CR>
nnoremap gf :action Forward<CR>
nnoremap gK :action QuickJavaDoc<CR>
" nnoremap gi
" nnoremap gf :action Forward<CR>

nnoremap <c-p> :action JumpToLastWindow<CR>
nnoremap <c-x> :action HideAllWindows<CR>

nnoremap <leader>r :action ContextRun<CR>

nnoremap <leader>db :action ToggleLineBreakpoint<CR>
nnoremap <leader>dd :action ContextDebug<CR>
nnoremap <leader>de :action ActivateDebugToolWindow<CR>

" " Mapping mimic Fugitive in my native vim
" nmap <Leader>gs :action CheckinProject<CR>
" nmap <Leader>gc :action CheckinProject<CR>
" nmap <Leader>ga :action Git.Add<CR>
" nmap <Leader>gp :action Git.Pull<CR>
" nmap <Leader>gn :action Annotate<CR>
" nmap <Leader>gl :action Git.Log<CR>
" nmap <Leader>go :action Github.Open.In.Browser<CR>
" nmap <Leader>br :action Git.Branches<CR>
" nmap <Leader>gb :action Git.Branches<CR>

"nnoremap <leader>s <Action>(SelectInProjectView)
"nnoremap <leader>a <Action>(Annotate)
"nnoremap <leader>n <Action>(GotoNextError)
"nnoremap <leader>o <Action>(FileStructurePopup)

"nnoremap <leader>h <A-cr>
sethandler <c-h> a:vim
sethandler <c-l> a:vim
sethandler <c-j> a:vim
sethandler <c-k> a:vim
nnoremap <c-h> <c-w>h
nnoremap <c-l> <c-w>l
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k

" --- General Settings ----------------------------

" Do incremental searching.
set incsearch

" Don't use Ex mode, use Q for formatting.
map Q gq


"" -- Map IDE actions to IdeaVim -- https://jb.gg/abva4t
"" Map \r to the Reformat Code action
"map \r <Action>(ReformatCode)

"" Map <leader>d to start debug
"map <leader>d <Action>(Debug)

"" Map \b to toggle the breakpoint on the current line
"map \b <Action>(ToggleLineBreakpoint)

set visualbell
set noerrorbells

set scrolloff=10                             " Keep 10 lines below and above the cursor when scrolling
set incsearch                           " incremental search
" set noincsearch                       " incremental search
set ignorecase                          " ignore cases when searching
set smartcase                           " when you use a capital word, enables case sensitivity

" Better indenting
vnoremap < <gv
vnoremap > >gv

" Use TAB to move between bufferes
" nnoremap <silent> <leader><TAB> :bnext<CR>
" nnoremap <silent> <leader><S-TAB> :bprevious<CR>
nnoremap <leader><TAB> :action NextTab<CR>
nnoremap <leader><S-TAB> :action PreviousTab<CR>

" Move selected line / block of text in visual mode
xnoremap K :move '<-2<CR>gv-gv
xnoremap J :move '>+1<CR>gv-gv
xnoremap H <gv
xnoremap L >gv

" back slash gets rid of the highligting after search
nnoremap <silent>\ :noh<return>

" Disable arrow movement, resize splits instead.
nnoremap <C-Up>    :resize -2<CR>
nnoremap <C-Down>  :resize +2<CR>
nnoremap <C-Left>  :vertical resize -2<CR>
nnoremap <C-Right> :vertical resize +2<CR>

" nnoremap <A-v> p
" Disable arrow keys in normal mode
" nnoremap <Left>  :echoe "Use h"<CR>
" nnoremap <Right> :echoe "Use l"<CR>
" nnoremap <Up>    :echoe "Use k"<CR>
" nnoremap <Down>  :echoe "Use j"<CR>
" Disable arrow keys in elite mode
" inoremap <Left>  <ESC>:echoe "Use h"<CR>
" inoremap <Right> <ESC>:echoe "Use l"<CR>
" inoremap <Up>    <ESC>:echoe "Use k"<CR>
" inoremap <Down>  <ESC>:echoe "Use j"<CR>

" Center when searching
nnoremap n nzz
nnoremap N Nzz
nnoremap * *zz
nnoremap # #zz
nnoremap g* g*zz
nnoremap g# g#zz

" Faster scrolling
nnoremap J 4j
nnoremap K 4k
nnoremap L w
nnoremap H b

" autocenter when entering insert mode
" autocmd InsertEnter * norm zz

" Close buffer without exitting neovim
" nnoremap W :bp<cr>:bd #<cr>
nnoremap W :bd<cr>

" Make visual mode consistent with other settings
vnoremap v <ESC>V
nnoremap V v$h

" Y to copy till end of the line
nnoremap Y v$hy

" autoclose parenthesis
" inoremap { {}<ESC>i
" inoremap [ []<ESC>i

" Use backspace key for matching parens
nmap <BS> %
xmap <BS> %

" Allow misspellings
cnoreabbrev qq q!
cnoreabbrev Q q
cnoreabbrev W w
cnoreabbrev qw wq
cnoreabbrev Wq wq
cnoreabbrev WQ wq
cnoreabbrev wQ wq
cnoreabbrev Qa qa
cnoreabbrev Bd bd
cnoreabbrev bD bd
"nmap q <nop>
map <C-z> <nop>

nnoremap gl $
nnoremap gh ^
nnoremap S :%s//gI<Left><Left><Left>

" nnoremap <C-s> :w<cr>

" -- Visual mode, better yanking
" map("v", "y", "ygv", default_opts)
vnoremap y ygv

" map("n", "p", "p`[v`]", default_opts)
" map("n", "P", "P`[v`]", default_opts)
nnoremap p p`[v`]
nnoremap P P`[v`]

" -- Don't copy when pasted
" map("v", "p", '"_dP`[v`]', default_opts)
vnoremap p "_dP`[v`]

" -- Better undo/redo
" map("n", "R", "<c-r>", default_opts)
nnoremap R <c-r>

" -- Don't yank when x
" map("n", "x", '"_x', default_opts)
nnoremap x "_x
